{"version":3,"sources":["module/index.js","index.js"],"names":["eventOptions","supportsPassive","passive","ThreeCanvas","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","removeAnimation","_resizeHandler","debounce","_updateDimensions","wrapper","renderer","maintainAspectRatio","scene","camera","offsetWidth","offsetHeight","onResize","aspect","updateProjectionMatrix","setSize","render","canvas","_this2","animator","webGLEnabled","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","window","devicePixelRatio","setTimeout","addEventListener","MutationObserver","mutationObserver","observe","attributes","Animator","animate","add","timeDiff","removeEventListener","disconnect","_this3","_this$props","rest","objectWithoutProperties","react_default","a","createElement","assign","ref","w","c","Component","defaultProps","ExampleThreeCanvas","secondInterval","state","FPS","actualFPS","pauseOnHidden","resumeOnShown","bind","assertThisInitialized","Scene","PerspectiveCamera","position","z","light","PointLight","set","geometry","BoxGeometry","material","MeshLambertMaterial","color","cube","Mesh","_this$canvas","setState","setClearColor","width","height","rotation","x","y","setFPS","setResumeOnShown","setPauseOnHidden","start","pause","resume","context","stop","clear","COLOR_BUFFER_BIT","src_module","className","type","value","toFixed","disabled","onChange","e","target","checked","Demo","status","a1","a2","_this4","src_ExampleThreeCanvas","id","onClick","startHandler","pauseHandler","resumeHandler","stopHandler","src_Demo","document","getElementById"],"mappings":"iTAgBMA,IAAeC,KAAkB,CAAEC,SAAS,GAE5CC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,gBAAkB,aAEvBP,EAAKQ,eAAiBC,IAAS,kBAAMT,EAAKU,sBAAqB,GAL9CV,mFAQC,IACVD,EAA6BI,KAA7BJ,MAAOY,EAAsBR,KAAtBQ,QAASC,EAAaT,KAAbS,SAChBC,EAAuCd,EAAvCc,oBAAqBC,EAAkBf,EAAlBe,MAAOC,EAAWhB,EAAXgB,OAC5BC,EAA8BL,EAA9BK,YAAaC,EAAiBN,EAAjBM,aAEjBJ,IACEd,EAAMmB,UACRnB,EAAMmB,SAASF,EAAaC,GAG9BF,EAAOI,OAASH,EAAcC,EAC9BF,EAAOK,0BAGTR,EAASS,QAAQL,EAAaC,GAC9BL,EAASU,OAAOR,EAAOC,8CAKvB,OAAOZ,KAAKoB,mDAGM,IAAAC,EAAArB,KACVJ,EAA2BI,KAA3BJ,MAAOY,EAAoBR,KAApBQ,QAASY,EAAWpB,KAAXoB,OAChBE,EAAqB1B,EAArB0B,SAAUV,EAAWhB,EAAXgB,OAEdW,MACFvB,KAAKS,SAAW,IAAIe,IAAc,CAAEJ,SAAQK,WAAW,IAEvDzB,KAAKS,SAAW,IAAIiB,IAAe,CAAEN,WAGvCpB,KAAKS,SAASkB,cAAcC,OAAOC,kBAEnCC,WAAW,WAAM,IACPjB,EAA8BL,EAA9BK,YAAaC,EAAiBN,EAAjBM,aAErBO,EAAKZ,SAASS,QAAQL,EAAaC,GAEnCF,EAAOI,OAASH,EAAcC,EAC9BF,EAAOK,2BAGTW,OAAOG,iBAAiB,SAAU/B,KAAKK,eAAgBb,GACvD4B,EAAOW,iBAAiB,SAAU/B,KAAKK,eAAgBb,GAEnDoC,OAAOI,mBACThC,KAAKiC,iBAAmB,IAAIL,OAAOI,iBAAiBhC,KAAKK,gBACzDL,KAAKiC,iBAAiBC,QAAQd,EAAQ,CAAEe,YAAY,KAGtDnC,KAAKsB,SAAWA,GAAY,IAAIc,IAE5BxC,EAAMyC,UACRrC,KAAKI,gBAAkBJ,KAAKsB,SAASgB,IAAI,SAAAC,GAAY,IAC3C3C,EAA6ByB,EAA7BzB,MAAOY,EAAsBa,EAAtBb,QAASC,EAAaY,EAAbZ,SAChBE,EAAkBf,EAAlBe,MAAOC,EAAWhB,EAAXgB,OACPC,EAA8BL,EAA9BK,YAAaC,EAAiBN,EAAjBM,aAErBL,EAASU,OAAOR,EAAOC,GAEvBhB,EAAMyC,QAAQxB,EAAaC,EAAcyB,qDAKxB,IACbnB,EAAWpB,KAAXoB,OAERQ,OAAOY,oBAAoB,SAAUxC,KAAKK,gBAC1Ce,EAAOoB,oBAAoB,SAAUxC,KAAKK,gBAEtCuB,OAAOI,kBACThC,KAAKiC,iBAAiBQ,aAGxBzC,KAAKI,mDAGE,IAAAsC,EAAA1C,KAAA2C,EASH3C,KAAKJ,MADJgD,GARED,EAELjC,oBAFKiC,EAGL5B,SAHK4B,EAILrB,SAJKqB,EAKLN,QALKM,EAMLhC,MANKgC,EAOL/B,OAPKd,OAAA+C,EAAA,EAAA/C,CAAA6C,EAAA,2EAWP,OACEG,EAAAC,EAAAC,cAAA,MAAAlD,OAAAmD,OAAA,CAAKC,IAAK,SAAAC,GAAC,OAAKT,EAAKlC,QAAU2C,IAAQP,GACrCE,EAAAC,EAAAC,cAAA,UAAQE,IAAK,SAAAE,GAAC,OAAKV,EAAKtB,OAASgC,aAtGfC,aAwH1B1D,EAAY2D,aAAe,CACzB5C,qBAAqB,GAGRf,QC/HT4D,qBACJ,SAAAA,EAAY3D,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACjB1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,KAAMJ,KAED4D,eAAiB,EAEtB3D,EAAK4D,MAAQ,CACXC,IAAK,EACLC,UAAW,EACXC,eAAe,EACfC,eAAe,GAGjBhE,EAAKwC,QAAUxC,EAAKwC,QAAQyB,KAAbhE,OAAAiE,EAAA,EAAAjE,QAAAiE,EAAA,EAAAjE,CAAAD,KAEfA,EAAKc,MAAQ,IAAIqD,IAEjBnE,EAAKe,OAAS,IAAIqD,IAAkB,GAAI,EAAG,EAAG,KAC9CpE,EAAKe,OAAOsD,SAASC,EAAI,GACzBtE,EAAKc,MAAM2B,IAAIzC,EAAKe,QAEpB,IAAIwD,EAAQ,IAAIC,IAAW,UAC3BD,EAAMF,SAASI,IAAI,GAAI,EAAG,IAC1BzE,EAAKc,MAAM2B,IAAI8B,GAEf,IAAIG,EAAW,IAAIC,IAAY,GAAI,GAAI,IACnCC,EAAW,IAAIC,IAAoB,CAAEC,MAAO,UAzB/B,OA0BjB9E,EAAK+E,KAAO,IAAIC,IAAKN,EAAUE,GAC/B5E,EAAKc,MAAM2B,IAAIzC,EAAK+E,MA3BH/E,mFA8BC,IAAAiF,EACa9E,KAAKoB,OAA5BE,EADUwD,EACVxD,SAAUb,EADAqE,EACArE,SACViD,EAAiDpC,EAAjDoC,IAAKC,EAA4CrC,EAA5CqC,UAAWC,EAAiCtC,EAAjCsC,cAAeC,EAAkBvC,EAAlBuC,cAEvC7D,KAAK+E,SAAS,CACZrB,MACAC,YACAC,gBACAC,kBAGFpD,EAASuE,cAAc,0CAGjBC,EAAOC,EAAQ3C,GAAU,IACvBqC,EAAS5E,KAAT4E,KAERA,EAAKO,SAASC,GAAK7C,EACnBqC,EAAKO,SAASE,GAAK9C,EAEnBvC,KAAKwD,gBAAkBjB,EAEnBvC,KAAKwD,eAAiB,KACxBxD,KAAK+E,SAAS,CAAEpB,UAAW,EAAIpB,IAC/BvC,KAAKwD,eAAiB,kCAInBE,GACL1D,KAAKoB,OAAOE,SAASgE,OAAO5B,GAC5B1D,KAAK+E,SAAS,CAAErB,iDAGDG,GACf7D,KAAKoB,OAAOE,SAASiE,iBAAiB1B,GACtC7D,KAAK+E,SAAS,CAAElB,2DAGDD,GACf5D,KAAKoB,OAAOE,SAASkE,iBAAiB5B,GACtC5D,KAAK+E,SAAS,CAAEnB,kDAIhB5D,KAAKoB,OAAOE,SAASmE,wCAIrBzF,KAAKoB,OAAOE,SAASoE,yCAIrB1F,KAAKoB,OAAOE,SAASqE,wCAGhB,IACGvE,EAAiBpB,KAAjBoB,OAAQwD,EAAS5E,KAAT4E,KACRtD,EAAuBF,EAAvBE,SACJsE,EAD2BxE,EAAbX,SACKmF,QAEvBtE,EAASuE,OACTD,EAAQE,MAAMF,EAAQG,kBACtBnB,EAAKO,SAASC,EAAI,EAClBR,EAAKO,SAASE,EAAI,mCAGX,IAAAhE,EAAArB,KACCW,EAAyBX,KAAzBW,MAAOC,EAAkBZ,KAAlBY,OAAQ6C,EAAUzD,KAAVyD,MACfC,EAAiDD,EAAjDC,IAAKC,EAA4CF,EAA5CE,UAAWC,EAAiCH,EAAjCG,cAAeC,EAAkBJ,EAAlBI,cACvC,OACEf,EAAAC,EAAAC,cAAA,MAAShD,KAAKJ,MACZkD,EAAAC,EAAAC,cAACgD,EAAD,CACEC,UAAU,YACV/C,IAAK,SAAAE,GAAC,OAAK/B,EAAKD,OAASgC,GACzBf,QAASrC,KAAKqC,QACd1B,MAAOA,EACPC,OAAQA,IAEVkC,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,YACbnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,SACbnD,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEkD,KAAK,SACLC,MAAOxC,EAAUyC,QAAQ,GACzBC,UAAU,EACVC,SAAU,gBAGdxD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,SACbnD,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEkD,KAAK,SACLC,MAAOzC,EACP4C,SAAU,SAAAC,GAAC,OAAIlF,EAAKiE,OAAOiB,EAAEC,OAAOL,WAGxCrD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,SACbnD,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACEkD,KAAK,WACLO,QAAS7C,EACT0C,SAAU,SAAAC,GAAC,OAAIlF,EAAKmE,iBAAiBe,EAAEC,OAAOC,aAGlD3D,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,SACbnD,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACEkD,KAAK,WACLO,QAAS5C,EACTyC,SAAU,SAAAC,GAAC,OAAIlF,EAAKkE,iBAAiBgB,EAAEC,OAAOC,sBA5I3BpD,cAqJ3BqD,cACJ,SAAAA,EAAY9G,GAAO,IAAA8C,EAAA,OAAA5C,OAAAC,EAAA,EAAAD,CAAAE,KAAA0G,IACjBhE,EAAA5C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4G,GAAAvG,KAAAH,KAAMJ,KAED6D,MAAQ,CAAEkD,OAAQ,WAHNjE,8EAOjB1C,KAAK4G,GAAGnB,QACRzF,KAAK6G,GAAGpB,QACRzF,KAAK+E,SAAS,CAAE4B,OAAQ,mDAIxB3G,KAAK4G,GAAGlB,QACR1F,KAAK6G,GAAGnB,gDAIR1F,KAAK4G,GAAGjB,SACR3F,KAAK6G,GAAGlB,+CAIR3F,KAAK4G,GAAGf,OACR7F,KAAK6G,GAAGhB,OACR7F,KAAK+E,SAAS,CAAE4B,OAAQ,6CAGjB,IAAAG,EAAA9G,KACC2G,EAAW3G,KAAKyD,MAAhBkD,OAER,OACE7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+D,EAAD,CAAoB7D,IAAK,SAAA0D,GAAE,OAAKE,EAAKF,GAAKA,GAAKI,GAAG,cAClDlE,EAAAC,EAAAC,cAAC+D,EAAD,CAAoB7D,IAAK,SAAA2D,GAAE,OAAKC,EAAKD,GAAKA,GAAKG,GAAG,cAClDlE,EAAAC,EAAAC,cAAA,OAAKgE,GAAG,cACNlE,EAAAC,EAAAC,cAAA,UACEgE,GAAG,QACHC,QAAS,kBAAMH,EAAKI,gBACpBb,SAAqB,YAAXM,GAHZ,SAOA7D,EAAAC,EAAAC,cAAA,UAAQgE,GAAG,QAAQC,QAAS,kBAAMH,EAAKK,iBAAvC,SAGArE,EAAAC,EAAAC,cAAA,UAAQgE,GAAG,SAASC,QAAS,kBAAMH,EAAKM,kBAAxC,UAGAtE,EAAAC,EAAAC,cAAA,UACEgE,GAAG,OACHC,QAAS,kBAAMH,EAAKO,eACpBhB,SAAqB,YAAXM,GAHZ,iBAlDStD,aA+DnBlC,iBAAO2B,EAAAC,EAAAC,cAACsE,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.d44dad36.chunk.js","sourcesContent":["/*eslint no-unused-vars: [\"warn\", { \"ignoreRestSiblings\": true }]*/\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport debounce from \"debounce\";\nimport supportsPassive from \"supports-passive\";\nimport {\n  WebGLRenderer,\n  CanvasRenderer,\n  Scene,\n  PerspectiveCamera,\n  OrthographicCamera\n} from \"three\";\nimport webGLEnabled from \"webgl-enabled\";\nimport Animator from \"jw-animator\";\n\nconst eventOptions = supportsPassive ? { passive: true } : false;\n\nclass ThreeCanvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.removeAnimation = () => {};\n\n    this._resizeHandler = debounce(() => this._updateDimensions(), true);\n  }\n\n  _updateDimensions() {\n    const { props, wrapper, renderer } = this;\n    const { maintainAspectRatio, scene, camera } = props;\n    const { offsetWidth, offsetHeight } = wrapper;\n\n    if (maintainAspectRatio) {\n      if (props.onResize) {\n        props.onResize(offsetWidth, offsetHeight);\n      }\n\n      camera.aspect = offsetWidth / offsetHeight;\n      camera.updateProjectionMatrix();\n    }\n\n    renderer.setSize(offsetWidth, offsetHeight);\n    renderer.render(scene, camera);\n  }\n\n  /** Retrieve the canvas react component. */\n  getCanvasElement() {\n    return this.canvas;\n  }\n\n  componentDidMount() {\n    const { props, wrapper, canvas } = this;\n    const { animator, camera } = props;\n\n    if (webGLEnabled()) {\n      this.renderer = new WebGLRenderer({ canvas, antialias: true });\n    } else {\n      this.renderer = new CanvasRenderer({ canvas });\n    }\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n\n    setTimeout(() => {\n      const { offsetWidth, offsetHeight } = wrapper;\n\n      this.renderer.setSize(offsetWidth, offsetHeight);\n\n      camera.aspect = offsetWidth / offsetHeight;\n      camera.updateProjectionMatrix();\n    });\n\n    window.addEventListener(\"resize\", this._resizeHandler, eventOptions);\n    canvas.addEventListener(\"resize\", this._resizeHandler, eventOptions);\n\n    if (window.MutationObserver) {\n      this.mutationObserver = new window.MutationObserver(this._resizeHandler);\n      this.mutationObserver.observe(canvas, { attributes: true });\n    }\n\n    this.animator = animator || new Animator();\n\n    if (props.animate) {\n      this.removeAnimation = this.animator.add(timeDiff => {\n        const { props, wrapper, renderer } = this;\n        const { scene, camera } = props;\n        const { offsetWidth, offsetHeight } = wrapper;\n\n        renderer.render(scene, camera);\n\n        props.animate(offsetWidth, offsetHeight, timeDiff);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const { canvas } = this;\n\n    window.removeEventListener(\"resize\", this._resizeHandler);\n    canvas.removeEventListener(\"resize\", this._resizeHandler);\n\n    if (window.MutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    this.removeAnimation();\n  }\n\n  render() {\n    const {\n      maintainAspectRatio,\n      onResize,\n      animator,\n      animate,\n      scene,\n      camera,\n      ...rest\n    } = this.props;\n\n    return (\n      <div ref={w => (this.wrapper = w)} {...rest}>\n        <canvas ref={c => (this.canvas = c)} />\n      </div>\n    );\n  }\n}\n\nThreeCanvas.propTypes = {\n  maintainAspectRatio: PropTypes.bool,\n  onResize: PropTypes.func,\n  animator: PropTypes.instanceOf(Animator),\n  animate: PropTypes.func,\n  scene: PropTypes.instanceOf(Scene).isRequired,\n  camera: PropTypes.oneOfType([\n    PropTypes.instanceOf(PerspectiveCamera),\n    PropTypes.instanceOf(OrthographicCamera)\n  ]).isRequired\n};\n\nThreeCanvas.defaultProps = {\n  maintainAspectRatio: true\n};\n\nexport default ThreeCanvas;\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport {\n  Scene,\n  PerspectiveCamera,\n  PointLight,\n  BoxGeometry,\n  MeshLambertMaterial,\n  Mesh\n} from \"three\";\n\nimport ThreeCanvas from \"./module\";\n\nimport \"./style.css\";\n\nclass ExampleThreeCanvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.secondInterval = 0;\n\n    this.state = {\n      FPS: 0,\n      actualFPS: 0,\n      pauseOnHidden: false,\n      resumeOnShown: false\n    };\n\n    this.animate = this.animate.bind(this);\n\n    this.scene = new Scene();\n\n    this.camera = new PerspectiveCamera(50, 1, 1, 1000);\n    this.camera.position.z = 60;\n    this.scene.add(this.camera);\n\n    let light = new PointLight(0xffff00);\n    light.position.set(10, 0, 25);\n    this.scene.add(light);\n\n    let geometry = new BoxGeometry(20, 20, 20);\n    let material = new MeshLambertMaterial({ color: 0x55ff55 });\n    this.cube = new Mesh(geometry, material);\n    this.scene.add(this.cube);\n  }\n\n  componentDidMount() {\n    const { animator, renderer } = this.canvas;\n    const { FPS, actualFPS, pauseOnHidden, resumeOnShown } = animator;\n\n    this.setState({\n      FPS,\n      actualFPS,\n      pauseOnHidden,\n      resumeOnShown\n    });\n\n    renderer.setClearColor(0xffffff);\n  }\n\n  animate(width, height, timeDiff) {\n    const { cube } = this;\n\n    cube.rotation.x += timeDiff;\n    cube.rotation.y += timeDiff;\n\n    this.secondInterval += timeDiff;\n\n    if (this.secondInterval > 0.5) {\n      this.setState({ actualFPS: 1 / timeDiff });\n      this.secondInterval = 0;\n    }\n  }\n\n  setFPS(FPS) {\n    this.canvas.animator.setFPS(FPS);\n    this.setState({ FPS });\n  }\n\n  setResumeOnShown(resumeOnShown) {\n    this.canvas.animator.setResumeOnShown(resumeOnShown);\n    this.setState({ resumeOnShown });\n  }\n\n  setPauseOnHidden(pauseOnHidden) {\n    this.canvas.animator.setPauseOnHidden(pauseOnHidden);\n    this.setState({ pauseOnHidden });\n  }\n\n  start() {\n    this.canvas.animator.start();\n  }\n\n  pause() {\n    this.canvas.animator.pause();\n  }\n\n  resume() {\n    this.canvas.animator.resume();\n  }\n\n  stop() {\n    const { canvas, cube } = this;\n    const { animator, renderer } = canvas;\n    let context = renderer.context;\n\n    animator.stop();\n    context.clear(context.COLOR_BUFFER_BIT);\n    cube.rotation.x = 0;\n    cube.rotation.y = 0;\n  }\n\n  render() {\n    const { scene, camera, state } = this;\n    const { FPS, actualFPS, pauseOnHidden, resumeOnShown } = state;\n    return (\n      <div {...this.props}>\n        <ThreeCanvas\n          className=\"animation\"\n          ref={c => (this.canvas = c)}\n          animate={this.animate}\n          scene={scene}\n          camera={camera}\n        />\n        <div className=\"settings\">\n          <div className=\"field\">\n            <label>Actual FPS: </label>\n            <input\n              type=\"number\"\n              value={actualFPS.toFixed(2)}\n              disabled={true}\n              onChange={() => {}}\n            />\n          </div>\n          <div className=\"field\">\n            <label>FPS: </label>\n            <input\n              type=\"number\"\n              value={FPS}\n              onChange={e => this.setFPS(e.target.value)}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Pause on hidden: </label>\n            <input\n              type=\"checkbox\"\n              checked={pauseOnHidden}\n              onChange={e => this.setPauseOnHidden(e.target.checked)}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Resume on shown: </label>\n            <input\n              type=\"checkbox\"\n              checked={resumeOnShown}\n              onChange={e => this.setResumeOnShown(e.target.checked)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { status: \"STOPPED\" };\n  }\n\n  startHandler() {\n    this.a1.start();\n    this.a2.start();\n    this.setState({ status: \"PLAYING\" });\n  }\n\n  pauseHandler() {\n    this.a1.pause();\n    this.a2.pause();\n  }\n\n  resumeHandler() {\n    this.a1.resume();\n    this.a2.resume();\n  }\n\n  stopHandler() {\n    this.a1.stop();\n    this.a2.stop();\n    this.setState({ status: \"STOPPED\" });\n  }\n\n  render() {\n    const { status } = this.state;\n\n    return (\n      <div>\n        <ExampleThreeCanvas ref={a1 => (this.a1 = a1)} id=\"animator1\" />\n        <ExampleThreeCanvas ref={a2 => (this.a2 = a2)} id=\"animator2\" />\n        <div id=\"controller\">\n          <button\n            id=\"start\"\n            onClick={() => this.startHandler()}\n            disabled={status !== \"STOPPED\"}\n          >\n            start\n          </button>\n          <button id=\"pause\" onClick={() => this.pauseHandler()}>\n            pause\n          </button>\n          <button id=\"resume\" onClick={() => this.resumeHandler()}>\n            resume\n          </button>\n          <button\n            id=\"stop\"\n            onClick={() => this.stopHandler()}\n            disabled={status === \"STOPPED\"}\n          >\n            stop\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nrender(<Demo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}